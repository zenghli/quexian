<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javaclimb.mapper.OrdersMapper">

    <resultMap id="ordersMap" type="orders">
        <result column="id" property="id" javaType="Integer"/>
        <result column="totalPrice" property="totalPrice" javaType="BigDecimal"/>
        <result column="uid" property="uid" javaType="Long"/>
        <result column="orderSn" property="orderSn" javaType="String"/>
        <result column="state" property="state" javaType="Integer"/>
        <result column="addressId" property="addressId" javaType="Integer"/>
        <result column="createTime" property="createTime" javaType="Date"/>
        <result column="updateTime" property="updateTime" javaType="Date"/>
        <result column="nickName" property="nickName" javaType="String"/>
        <result column="avatarUrl" property="avatarUrl" javaType="String"/>
        <association property="address" column="addressId" javaType="address" select="com.javaclimb.mapper.AddressMapper.getById"></association>
        <collection property="ordersDetailList" column="id" javaType="ArrayList" select="com.javaclimb.mapper.OrdersDetailMapper.getListByOid"
                    ofType="ordersDetail"></collection>
    </resultMap>

    <select id="getList" parameterType="orders" resultMap="ordersMap">
        select o.*,u.nickName,u.avatarUrl from orders o
        left join user u on u.id = o.uid
        <where>
            <if test="state>0">
                o.state = #{state}
            </if>
            <if test="id!=null and id!=''">
                and o.id = #{id}
            </if>
            <if test="uid!=null and uid!=''">
                and o.uid = #{uid}
            </if>
            <if test="orderSn!=null and orderSn!=''">
                and o.orderSn = #{orderSn}
            </if>
            <if test="nickName!=null and nickName!=''">
                and o.uid in (select u1.id from user u1 where u1.nickName like '%${nickName}%')
            </if>
        </where>
        order by o.id desc
    </select>

    <insert id="add" parameterType="orders">
        insert into orders(totalPrice,uid,orderSn,addressId)
        values(#{totalPrice},#{uid},#{orderSn},#{addressId})
    </insert>

    <update id="update" parameterType="orders">
        update orders set
        totalPrice=#{totalPrice},
        uid=#{uid},
        orderSn=#{orderSn},
        addressId=#{addressId}
        where id=#{id}
    </update>

    <update id="updateState" parameterType="orders">
        update orders set state=#{state} where id=#{id}
    </update>

</mapper>


